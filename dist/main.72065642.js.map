{"version":3,"sources":["main.js"],"names":["node1","dom","find","newNode","create","after","node2","newNode2","newNode3","appendChild","node3","newNode_1","newNode_2","before","node4","newNode_3","newNode_4","append","node5","newNode4","newNode5","wrap","node6","newNode6","parentNode","removeChild","node7","newNode7","empty","div","style","divList","each","n","console","log"],"mappings":";AACA,IAAIA,EAAQC,IAAIC,KAAK,UAAU,GAC3BC,EAAUF,IAAIG,OAAO,4BACzBH,IAAII,MAAML,EAAOG,GAGjB,IAAIG,EAAQL,IAAIC,KAAK,UAAU,GAC3BK,EAAWN,IAAIG,OAAO,oBACtBI,EAAWP,IAAIG,OAAO,oBAC1BE,EAAMG,YAAYF,GAClBN,IAAII,MAAME,EAAUC,GAGpB,IAAIE,EAAQT,IAAIC,KAAK,kBAAkB,GACnCS,EAAYV,IAAIG,OAAO,oBACvBQ,EAAYX,IAAIG,OAAO,oBAC3BM,EAAMD,YAAYE,GAClBV,IAAIY,OAAOF,EAAWC,GAGtB,IAAIE,EAAQb,IAAIC,KAAK,kBAAkB,GACnCa,EAAYd,IAAIG,OAAO,oBACvBY,EAAYf,IAAIG,OAAO,oBAC3BU,EAAML,YAAYM,GAClBA,EAAUE,OAAOD,GAGjB,IAAIE,EAAQjB,IAAIC,KAAK,kBAAkB,GACnCiB,EAAWlB,IAAIG,OAAO,oBACtBgB,EAAWnB,IAAIG,OAAO,oBAC1Bc,EAAMT,YAAYU,GAClBlB,IAAIoB,KAAKF,EAAUC,GAInB,IAAIE,EAAQrB,IAAIC,KAAK,kBAAkB,GACnCqB,EAAWtB,IAAIG,OAAO,oBAC1BkB,EAAMb,YAAYc,GAClBA,EAASC,WAAWC,YAAYF,GAGhC,IAAIG,EAAQzB,IAAIC,KAAK,kBAAkB,GACnCyB,EAAW1B,IAAIG,OAAO,oBAC1BsB,EAAMjB,YAAYkB,GAClBD,EAAMjB,YAAYc,GAClBtB,IAAI2B,MAAMF,GAIV,IAAMG,EAAM5B,IAAIC,KAAK,cAAc,GACnCD,IAAI6B,MAAMD,EAAK,QAAS,OAExB,IAAME,EAAU9B,IAAIC,KAAK,QACzBD,IAAI+B,KAAKD,EAAS,SAACE,GAAKC,OAAAA,QAAQC,IAAIF","file":"main.72065642.js","sourceRoot":"..\\src","sourcesContent":["// 例子1：创建一个dom并插入到例子一中\r\nlet node1 = dom.find(\".item1\")[0];\r\nlet newNode = dom.create(\"<div>create new div<div>\")\r\ndom.after(node1, newNode);\r\n\r\n// 例子2：创建两个节点，并把按顺序\r\nlet node2 = dom.find(\".item2\")[0];\r\nlet newNode2 = dom.create(\"<div>node1</div>\");\r\nlet newNode3 = dom.create(\"<div>node2</div>\")\r\nnode2.appendChild(newNode2)\r\ndom.after(newNode2, newNode3)\r\n\r\n// 例子3：创建两个节点，并将新结点放前\r\nlet node3 = dom.find(\".item .content\")[2];\r\nlet newNode_1 = dom.create(\"<div>node1</div>\");\r\nlet newNode_2 = dom.create(\"<div>node2</div>\")\r\nnode3.appendChild(newNode_1);\r\ndom.before(newNode_1, newNode_2)\r\n\r\n// 例子4：父子节点\r\nlet node4 = dom.find(\".item .content\")[3];\r\nlet newNode_3 = dom.create(\"<div>node1</div>\");\r\nlet newNode_4 = dom.create(\"<div>node2</div>\")\r\nnode4.appendChild(newNode_3);\r\nnewNode_3.append(newNode_4)\r\n\r\n// 例子5：给oldNode 添加父节点\r\nlet node5 = dom.find(\".item .content\")[4];\r\nlet newNode4 = dom.create(\"<div>node1</div>\");\r\nlet newNode5 = dom.create(\"<div>node2</div>\")\r\nnode5.appendChild(newNode4);\r\ndom.wrap(newNode4, newNode5)\r\n\r\n\r\n// 例子6：删除一个node\r\nlet node6 = dom.find(\".item .content\")[5];\r\nlet newNode6 = dom.create(\"<div>node1</div>\");\r\nnode6.appendChild(newNode6)\r\nnewNode6.parentNode.removeChild(newNode6)\r\n\r\n// 例子7：删除一个node\r\nlet node7 = dom.find(\".item .content\")[6];\r\nlet newNode7 = dom.create(\"<div>node2</div>\");\r\nnode7.appendChild(newNode7);\r\nnode7.appendChild(newNode6)\r\ndom.empty(node7);\r\n\r\n\r\n// 例子8：find 红色\r\nconst div = dom.find('#test>.red')[0] // 获取对应的元素\r\ndom.style(div, 'color', 'red') // 设置 div.style.color\r\n\r\nconst divList = dom.find('.red') // 获取多个 div.red 元素\r\ndom.each(divList, (n)=> console.log(n)) // 遍历 divList 里的所有元素\r\n"]}